---
title: "Observatorio de sueldos en Chile"
author: "Alonso Silva"
format: 
  dashboard:
    orientation: rows
    nav-buttons: 
      - github
server: shiny
---

```{python}
#| context: setup
import numpy as np
import pandas as pd
from pathlib import Path
import plotly.graph_objects as go
from shiny import render, reactive, ui
from shinywidgets import output_widget, render_widget
appdir = Path(__file__).parent
percent = pd.read_csv(appdir/"percentiles.csv")
DF_CURVA = percent.set_index("percentile")
```

## Row {height="30%"}

```{python}
#| content: valuebox
#| title: "Ingreso Medio Mensual 2022"
dict(
  icon = "graph-up",
  color = "blue",
  value = "$757.752"
)
```

```{python}
#| content: valuebox
#| title: "Ingreso Mediano Mensual 2022"
dict(
  icon = "graph-up",
  color = "warning",
  value = "$502.604"
)
```

## Row  {height="70%"}

### Column {width="20%"}
```{python}
ui.input_numeric("sueldo", "Ingrese su sueldo mensual", value=600000)
```

### Column {width="80%"}

```{python}
#| title: "Ingreso mensual vs percentil"
@render_widget()
def nav():
    sueldo = input.sueldo() if input.sueldo() is not None else 0
    aux = DF_CURVA.loc[list((DF_CURVA["sueldo"]<sueldo))]
    percentile_sueldo = 100*DF_CURVA[DF_CURVA["sueldo"]<sueldo].index[-1] if sueldo != 0 else 0
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=list(DF_CURVA.index), y=list(DF_CURVA["sueldo"]), hovertemplate='Sueldo mensual: %{y:$,.0f}<extra></extra>'))
    fig.add_trace(go.Scatter(x=list(aux.index), y=list(aux["sueldo"]), fill='tozeroy', hovertemplate='<extra></extra>'))
    fig.update_layout(
    	title = f'{percentile_sueldo:.0f} % de las personas ocupadas gana menos que usted.',
    	yaxis_title = 'Ingreso mensual',
    	xaxis = dict(
    		tickmode = 'array',
    		tickvals = [.1*i for i in range(11)],
    		ticktext = [f'{10*i}%' for i in range(11)]
    	),
    	xaxis_tickformat=',.0%',
    	yaxis_tickformat=',.0'.replace(',',','),
    	yaxis = dict(
    		tickmode = 'array',
    		tickvals = [500_000*i for i in range(9)],
    		ticktext = [f'${500_000*i:,}'.replace(',','.') for i in range(9)]
    	),
    	showlegend=False
    )
    fig.update_layout(
    	hovermode="x",
    	hoverlabel=dict(
    		bgcolor="white",
    	)
    )
    return fig
```
